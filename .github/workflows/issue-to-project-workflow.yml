# GitHub Workflow to add issues to the DCC-EX project.
#
# This workflow applies to all issues being opened in a repository and this workflow should be
# associated with all repositories.
# Note for private repositories, these will require local secrets, public repositories will use
# the organisation secrets.
#
# Refer to https://github.com/DCC-EX/Support-Planning for documentation.

name: Add Issue to Project
on:
  issues:
    types:
      - opened
jobs:
  add_to_project:
    runs-on: ubuntu-latest
    steps:
      - name: Generate token
        id: generate_token
        uses: tibdex/github-app-token@36464acb844fc53b9b8b2401da68844f6b05ebb0
        with:
          app_id: ${{ secrets.PROJECT_APP_ID }}
          private_key: ${{ secrets. PROJECT_APP_KEY }}

      - name: Get project data
        env:
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
          ORG: DCC-EX
          PROJECT_NUMBER: 7
        run: |
          gh api graphql -f query='
            query($org: String!, $number: Int!) {
              organization(login: $org){
                projectNext(number: $number) {
                  id
                  fields(first:20) {
                    nodes {
                      id
                      name
                      settings
                    }
                  }
                }
              }
            }' -f org=$ORG -F number=$PROJECT_NUMBER > project_data.json

          echo 'PROJECT_ID='$(jq '.data.organization.projectNext.id' project_data.json) >> $GITHUB_ENV
 
      - name: Add issue to project
        env:
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
          ISSUE_ID: ${{ github.event.issue.node_id }}
        run: |
          item_id="$( gh api graphql -f query='
            mutation($project:ID!, $issue:ID!) {
              addProjectNextItem(input: {projectId: $project, contentId: $issue}) {
                projectNextItem {
                  id
                }
              }
            }' -f project=$PROJECT_ID -f issue=$ISSUE_ID --jq '.data.addProjectNextItem.projectNextItem.id')"

      -name: Add labels
        uses: andymckay/labeler@master
        with:
          add-labels: "Turntable-EX"
